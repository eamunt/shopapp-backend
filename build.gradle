plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-logging', version: '3.2.4'
	testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.14'
	implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '3.1.1'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '3.2.2'
	implementation group: 'org.springframework.data', name: 'spring-data-redis', version: '3.2.2'
	implementation group: 'io.lettuce', name: 'lettuce-core', version: '6.3.1.RELEASE'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '3.2.2'

	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '3.3.1'


	implementation 'org.flywaydb:flyway-core:10.11.1'
	implementation 'org.flywaydb:flyway-mysql:10.11.1'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'com.github.javafaker:javafaker:1.0.2' exclude module: 'snakeyaml'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jar {
	manifest {
		attributes(
				'Main-Class': "com.project.shopapp.ShopappApplication"
		)
	}
	from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	duplicatesStrategy = DuplicatesStrategy.INCLUDE // Merge duplicate files
	// duplicatesStrategy = DuplicatesStrategy.EXCLUDE // Ignore duplicate files
	// duplicatesStrategy = DuplicatesStrategy.FAIL // Fail on duplicate files
}